/*
 * EditChannelPanel.java
 *
 * Created on 25. Mï¿½rz 2008, 20:06
 */

package dimm.home.Panels;

import dimm.home.Rendering.GlossButton;
import dimm.home.UserMain;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import home.shared.hibernate.Role;
import dimm.home.Utilities.Validator;
import home.shared.SQL.OptCBEntry;
import java.awt.Component;
import javax.swing.JCheckBox;



/**
 
 @author  Administrator
 */
public class EditRole extends GenericEditPanel
{
    RoleOverview vbox_overview;
    RoleTableModel model;
    Role object;
    
    String object_name;


    
    /** Creates new form EditChannelPanel */
    public EditRole(int _row, RoleOverview _overview)
    {
        initComponents();     
        
        vbox_overview = _overview;
        model = vbox_overview.get_object_model();

        int cb_field_idx = 0;
        for (int i = 0; i < PN_OPTS.getComponentCount(); i++)
        {
            Component c = PN_OPTS.getComponent(i);
            if (!(c instanceof JCheckBox))
                    continue;

            if (i >= OptCBEntry.opt_list.length)
                break;

            // PUBLISH CB TO STRUCT AND GET TEXT
            JCheckBox cb = (JCheckBox)c;

            OptCBEntry optCBEntry = OptCBEntry.opt_list[cb_field_idx];

            optCBEntry.setTxt(UserMain.Txt(optCBEntry.getToken()));

            cb.setText(optCBEntry.getTxt());
            optCBEntry.setCb(cb);

            cb_field_idx++;
        }


                                
        row = _row;
        
        if (!model.is_new(row))
        {
            object = model.get_object(row);


            TXT_NAME.setText(object.getName());
            TXT_ACCOUNTMATCH.setText( vbox_overview.get_account_match_descr(object.getAccountmatch()));
            String opts = object.getOpts();
            set_opts_buttons( opts );
            BT_DISABLED.setSelected( object_is_disabled() );

            
        }
        else
        {
            object = new Role();
            object.setMandant(UserMain.sqc().get_act_mandant());
        }

        object_name = object.getClass().getSimpleName();

    }
    
    
   
    /** This method is called from within the constructor to
     initialize the form.
     WARNING: Do NOT modify this code. The content of this method is
     always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PN_ACTION = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TXT_NAME = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        BT_DISABLED = new javax.swing.JCheckBox();
        TXT_ACCOUNTMATCH = new javax.swing.JTextField();
        PN_OPTS = new javax.swing.JPanel();
        CP_OPT1 = new javax.swing.JCheckBox();
        CP_OPT2 = new javax.swing.JCheckBox();
        CP_OPT3 = new javax.swing.JCheckBox();
        CP_OPT4 = new javax.swing.JCheckBox();
        CP_OPT5 = new javax.swing.JCheckBox();
        CP_OPT6 = new javax.swing.JCheckBox();
        BT_EDIT_MATCH = new javax.swing.JButton();
        PN_BUTTONS = new javax.swing.JPanel();
        BT_OK = new GlossButton();
        BT_ABORT = new GlossButton();

        setDoubleBuffered(false);
        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        PN_ACTION.setDoubleBuffered(false);
        PN_ACTION.setOpaque(false);

        jLabel1.setText(UserMain.Txt("Name")); // NOI18N

        TXT_NAME.setText(UserMain.Txt("Neuer_Pfad")); // NOI18N
        TXT_NAME.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TXT_NAMEMouseClicked(evt);
            }
        });
        TXT_NAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_NAMEActionPerformed(evt);
            }
        });

        jLabel2.setText(UserMain.getString("Mailkonto")); // NOI18N

        BT_DISABLED.setText(UserMain.getString("Gesperrt")); // NOI18N
        BT_DISABLED.setOpaque(false);

        TXT_ACCOUNTMATCH.setText("jTextField1");

        PN_OPTS.setBorder(javax.swing.BorderFactory.createTitledBorder(UserMain.getString("Options"))); // NOI18N

        CP_OPT1.setText("jCheckBox1");

        CP_OPT2.setText("jCheckBox1");

        CP_OPT3.setText("jCheckBox1");

        CP_OPT4.setText("jCheckBox1");

        CP_OPT5.setText("jCheckBox1");

        CP_OPT6.setText("jCheckBox1");

        javax.swing.GroupLayout PN_OPTSLayout = new javax.swing.GroupLayout(PN_OPTS);
        PN_OPTS.setLayout(PN_OPTSLayout);
        PN_OPTSLayout.setHorizontalGroup(
            PN_OPTSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PN_OPTSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PN_OPTSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CP_OPT1)
                    .addComponent(CP_OPT2)
                    .addComponent(CP_OPT3)
                    .addComponent(CP_OPT4)
                    .addComponent(CP_OPT5)
                    .addComponent(CP_OPT6))
                .addContainerGap(374, Short.MAX_VALUE))
        );
        PN_OPTSLayout.setVerticalGroup(
            PN_OPTSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PN_OPTSLayout.createSequentialGroup()
                .addComponent(CP_OPT1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CP_OPT2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CP_OPT3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CP_OPT4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CP_OPT5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CP_OPT6)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        BT_EDIT_MATCH.setText("...");
        BT_EDIT_MATCH.setMargin(new java.awt.Insets(2, 5, 2, 5));

        javax.swing.GroupLayout PN_ACTIONLayout = new javax.swing.GroupLayout(PN_ACTION);
        PN_ACTION.setLayout(PN_ACTIONLayout);
        PN_ACTIONLayout.setHorizontalGroup(
            PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PN_ACTIONLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PN_OPTS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BT_DISABLED, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                    .addGroup(PN_ACTIONLayout.createSequentialGroup()
                        .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(15, 15, 15)
                        .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PN_ACTIONLayout.createSequentialGroup()
                                .addComponent(TXT_ACCOUNTMATCH, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(BT_EDIT_MATCH)))))
                .addContainerGap())
        );
        PN_ACTIONLayout.setVerticalGroup(
            PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PN_ACTIONLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TXT_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_ACCOUNTMATCH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(BT_EDIT_MATCH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PN_OPTS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(BT_DISABLED)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(PN_ACTION, gridBagConstraints);

        PN_BUTTONS.setDoubleBuffered(false);
        PN_BUTTONS.setOpaque(false);

        BT_OK.setText(UserMain.Txt("Okay")); // NOI18N
        BT_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_OKActionPerformed(evt);
            }
        });

        BT_ABORT.setText(UserMain.Txt("Abbruch")); // NOI18N
        BT_ABORT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_ABORTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PN_BUTTONSLayout = new javax.swing.GroupLayout(PN_BUTTONS);
        PN_BUTTONS.setLayout(PN_BUTTONSLayout);
        PN_BUTTONSLayout.setHorizontalGroup(
            PN_BUTTONSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PN_BUTTONSLayout.createSequentialGroup()
                .addContainerGap(305, Short.MAX_VALUE)
                .addComponent(BT_ABORT, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BT_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PN_BUTTONSLayout.setVerticalGroup(
            PN_BUTTONSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PN_BUTTONSLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PN_BUTTONSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BT_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BT_ABORT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(PN_BUTTONS, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void BT_OKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_OKActionPerformed
    {//GEN-HEADEREND:event_BT_OKActionPerformed
        // TODO add your handling code here:
        ok_action(object);
    }//GEN-LAST:event_BT_OKActionPerformed

    private void BT_ABORTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_ABORTActionPerformed
    {//GEN-HEADEREND:event_BT_ABORTActionPerformed
        // TODO add your handling code here:
        abort_action();
    }//GEN-LAST:event_BT_ABORTActionPerformed

    private void TXT_NAMEMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_TXT_NAMEMouseClicked
    {//GEN-HEADEREND:event_TXT_NAMEMouseClicked
        // TODO add your handling code here:
        if (UserMain.self.is_touchscreen())
        {
            UserMain.self.show_vkeyboard( this.my_dlg, TXT_NAME, false);
        }
}//GEN-LAST:event_TXT_NAMEMouseClicked

    private void TXT_NAMEActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_TXT_NAMEActionPerformed
    {//GEN-HEADEREND:event_TXT_NAMEActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_TXT_NAMEActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_ABORT;
    private javax.swing.JCheckBox BT_DISABLED;
    private javax.swing.JButton BT_EDIT_MATCH;
    private javax.swing.JButton BT_OK;
    private javax.swing.JCheckBox CP_OPT1;
    private javax.swing.JCheckBox CP_OPT2;
    private javax.swing.JCheckBox CP_OPT3;
    private javax.swing.JCheckBox CP_OPT4;
    private javax.swing.JCheckBox CP_OPT5;
    private javax.swing.JCheckBox CP_OPT6;
    private javax.swing.JPanel PN_ACTION;
    private javax.swing.JPanel PN_BUTTONS;
    private javax.swing.JPanel PN_OPTS;
    private javax.swing.JTextField TXT_ACCOUNTMATCH;
    private javax.swing.JTextField TXT_NAME;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    int get_object_flags()
    {
        int flags = 0;
        if (object.getFlags() == null || object.getFlags().length() == 0)
            return 0;

        try
        {
            flags = Integer.parseInt(object.getFlags());
        }
        catch (NumberFormatException numberFormatException)
        {
            Logger.getLogger("").log(Level.SEVERE, "Invalid flag for " + object_name + " " + numberFormatException );
        }

        return flags;
    }
    void set_object_flag(int flag)
    {
        int flags = get_object_flags();
        flags |= flag;
        object.setFlags(Integer.toString(flags));
    }
    void clr_object_flag(int flag)
    {
        int flags = get_object_flags();
        flags &= ~flag;
        object.setFlags(Integer.toString(flags));
    }

    boolean object_is_disabled()
    {
        int flags = 0;

        flags = get_object_flags();

        return ((flags & RoleOverview.DISABLED) == RoleOverview.DISABLED);
    }
    void set_object_disabled( boolean f)
    {
        int flags = get_object_flags();

        if (f)
            set_object_flag( RoleOverview.DISABLED );
        else
            clr_object_flag( RoleOverview.DISABLED );
    }

    
    @Override
    protected boolean check_changed()
    {        
        if (model.is_new(row))
            return true;

        String name = object.getName();
        if (name == null || TXT_NAME.getText().compareTo(name ) != 0)
            return true;   
        
        if (BT_DISABLED.isSelected() != object_is_disabled())
            return true;

        String opts = object.getOpts();
        if (opts == null || get_opts_buttons().compareTo(opts) != 0)
            return true;

        String ac = object.getAccountmatch();


        if (ac == null || TXT_ACCOUNTMATCH.getText().compareTo(ac) != 0)
            return true;

        
        return false;
    }
                        
    @Override
    protected boolean is_plausible()
    {
        if (!Validator.is_valid_path( TXT_NAME.getText(), 255))
        {
            UserMain.errm_ok(UserMain.getString("Der_Pfad_ist_nicht_okay"));
            return false;
        }

                
        return true;
    }

    

    @Override
    protected void set_object_props()
    {
        String name = TXT_NAME.getText();
        String opts = get_opts_buttons();
        boolean de = BT_DISABLED.isSelected();


        String ac = TXT_ACCOUNTMATCH.getText();


        object.setName(name);
        object.setOpts(opts);
        object.setAccountmatch(ac);
        object.setLicense( new Integer(0));

        set_object_disabled( de );
    }
    
    
        
    @Override
    protected boolean is_new()
    {
        return model.is_new(row);
    }
   

    @Override
    public JButton get_default_button()
    {
        return BT_OK;
    }

    private void set_opts_buttons( String opts )
    {
        for (int i = 0; i < OptCBEntry.opt_list.length; i++)
        {
            OptCBEntry optCBEntry = OptCBEntry.opt_list[i];
            if (optCBEntry.getCb() != null)
            {
                optCBEntry.getCb().setSelected(false);
            }
        }

        for (int i = 0; i < OptCBEntry.opt_list.length; i++)
        {
            OptCBEntry optCBEntry = OptCBEntry.opt_list[i];
            if (opts.length() <= i)
                break;

            char ch = opts.charAt(i);
            if (ch == '1')
            {
                optCBEntry.getCb().setSelected(true);
            }
        }
    }
    private String get_opts_buttons(  )
    {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < OptCBEntry.opt_list.length; i++)
        {
            sb.append('0');

            OptCBEntry optCBEntry = OptCBEntry.opt_list[i];
            if (optCBEntry.getCb() != null)
            {
                if (optCBEntry.getCb().isSelected())
                    sb.setCharAt(i, '1');
            }
        }

        return sb.toString();
    }
    
}
