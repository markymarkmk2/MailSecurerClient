/*
 * EditChannelPanel.java
 *
 * Created on 25. Mï¿½rz 2008, 20:06
 */

package dimm.home.Panels;

import dimm.home.Rendering.GlossButton;
import dimm.home.UserMain;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import dimm.general.hibernate.DiskArchive;
import dimm.general.hibernate.DiskSpace;




/**
 
 @author  Administrator
 */
public class EditDiskSpace extends GenericEditPanel
{
    DiskSpaceOverview object_overview;
    DiskSpaceTableModel model;
    DiskSpace object;    
    
    
    /** Creates new form EditChannelPanel */
    public EditDiskSpace(DiskArchive da, int _row, DiskSpaceOverview _overview)
    {
        initComponents();     
        
        object_overview = _overview;
        model = object_overview.get_object_model();
        
        CB_STATUS.removeAllItems();

        // FILL COMBOBOX TYPE
        for (int i = 0; i < object_overview.get_ds_entry_list().length; i++)
        {
            DiskSpaceOverview.DiskSpaceTypeEntry mte = object_overview.get_ds_entry_list()[i];
            CB_STATUS.addItem( mte );
        }
                               
        row = _row;
        
        if (!model.is_new(row))
        {
            object = model.get_object(row);

            String status = object.getStatus();
            for (int i = 0; i < object_overview.get_ds_entry_list().length; i++)
            {
                DiskSpaceOverview.DiskSpaceTypeEntry mte = object_overview.get_ds_entry_list()[i];
                if (mte.type.compareTo(status)== 0)
                {
                    CB_STATUS.setSelectedIndex(i);
                    break;
                }
            }
        }
        else
        {
            object = new DiskSpace();
            CB_STATUS.setSelectedIndex(0);
            object.setDiskArchive(da);
        }
        
        

    }
    
    
   
    /** This method is called from within the constructor to
     initialize the form.
     WARNING: Do NOT modify this code. The content of this method is
     always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PN_ACTION = new javax.swing.JPanel();
        TXT_PATH = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        BT_DISABLED = new javax.swing.JCheckBox();
        TXT_CAP = new javax.swing.JTextField();
        CB_CAP_DIM = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CB_STATUS = new javax.swing.JComboBox();
        PN_BUTTONS = new javax.swing.JPanel();
        BT_OK = new GlossButton();
        BT_ABORT = new GlossButton();

        setDoubleBuffered(false);
        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        PN_ACTION.setDoubleBuffered(false);
        PN_ACTION.setOpaque(false);

        TXT_PATH.setText(UserMain.Txt("Neuer_Pfad")); // NOI18N
        TXT_PATH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TXT_PATHMouseClicked(evt);
            }
        });
        TXT_PATH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_PATHActionPerformed(evt);
            }
        });

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("dimm/home/SR_Properties"); // NOI18N
        jLabel2.setText(bundle.getString("Path")); // NOI18N

        BT_DISABLED.setText(bundle.getString("Gesperrt")); // NOI18N
        BT_DISABLED.setOpaque(false);

        CB_CAP_DIM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MB", "GB", "TB" }));

        jLabel3.setText(bundle.getString("Max_capacity")); // NOI18N

        jLabel4.setText(bundle.getString("Status")); // NOI18N

        CB_STATUS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout PN_ACTIONLayout = new javax.swing.GroupLayout(PN_ACTION);
        PN_ACTION.setLayout(PN_ACTIONLayout);
        PN_ACTIONLayout.setHorizontalGroup(
            PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PN_ACTIONLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(BT_DISABLED, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PN_ACTIONLayout.createSequentialGroup()
                        .addComponent(TXT_CAP, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CB_CAP_DIM, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TXT_PATH, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(CB_STATUS, 0, 210, Short.MAX_VALUE))
                .addContainerGap())
        );
        PN_ACTIONLayout.setVerticalGroup(
            PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PN_ACTIONLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_PATH, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_CAP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(CB_CAP_DIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PN_ACTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(CB_STATUS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(BT_DISABLED)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(PN_ACTION, gridBagConstraints);

        PN_BUTTONS.setDoubleBuffered(false);
        PN_BUTTONS.setOpaque(false);

        BT_OK.setText(UserMain.Txt("Okay")); // NOI18N
        BT_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_OKActionPerformed(evt);
            }
        });

        BT_ABORT.setText(UserMain.Txt("Abbruch")); // NOI18N
        BT_ABORT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_ABORTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PN_BUTTONSLayout = new javax.swing.GroupLayout(PN_BUTTONS);
        PN_BUTTONS.setLayout(PN_BUTTONSLayout);
        PN_BUTTONSLayout.setHorizontalGroup(
            PN_BUTTONSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PN_BUTTONSLayout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addComponent(BT_ABORT, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BT_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PN_BUTTONSLayout.setVerticalGroup(
            PN_BUTTONSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PN_BUTTONSLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PN_BUTTONSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BT_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BT_ABORT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(PN_BUTTONS, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void BT_OKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_OKActionPerformed
    {//GEN-HEADEREND:event_BT_OKActionPerformed
        // TODO add your handling code here:
        ok_action(object);
    }//GEN-LAST:event_BT_OKActionPerformed

    private void BT_ABORTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_ABORTActionPerformed
    {//GEN-HEADEREND:event_BT_ABORTActionPerformed
        // TODO add your handling code here:
        abort_action();
    }//GEN-LAST:event_BT_ABORTActionPerformed

    private void TXT_PATHMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_TXT_PATHMouseClicked
    {//GEN-HEADEREND:event_TXT_PATHMouseClicked
        // TODO add your handling code here:
        if (UserMain.self.is_touchscreen())
        {
            UserMain.self.show_vkeyboard( this.my_dlg, TXT_PATH, false);
        }
}//GEN-LAST:event_TXT_PATHMouseClicked

    private void TXT_PATHActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_TXT_PATHActionPerformed
    {//GEN-HEADEREND:event_TXT_PATHActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_TXT_PATHActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_ABORT;
    private javax.swing.JCheckBox BT_DISABLED;
    private javax.swing.JButton BT_OK;
    private javax.swing.JComboBox CB_CAP_DIM;
    private javax.swing.JComboBox CB_STATUS;
    private javax.swing.JPanel PN_ACTION;
    private javax.swing.JPanel PN_BUTTONS;
    private javax.swing.JTextField TXT_CAP;
    private javax.swing.JTextField TXT_PATH;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

    int get_object_flags()
    {
        int flags = 0;
        if (object.getFlags() == null || object.getFlags().length() == 0)
            return 0;

        try
        {
            flags = Integer.parseInt(object.getFlags());
        }
        catch (NumberFormatException numberFormatException)
        {
            String object_name = object.getClass().getSimpleName();
            Logger.getLogger("").log(Level.SEVERE, "Invalid flag for " + object_name+ " " + numberFormatException );
        }

        return flags;
    }
    void set_object_flag(int flag)
    {
        int flags = get_object_flags();
        flags |= flag;
        object.setFlags(Integer.toString(flags));
    }
    void clr_object_flag(int flag)
    {
        int flags = get_object_flags();
        flags &= ~flag;
        object.setFlags(Integer.toString(flags));
    }

    boolean object_is_disabled()
    {
        int flags = 0;

        flags = get_object_flags();

        return ((flags & DiskSpaceOverview.DISABLED) == DiskSpaceOverview.DISABLED);
    }
    void set_object_disabled( boolean f)
    {
        int flags = get_object_flags();

        if (f)
            set_object_flag( DiskSpaceOverview.DISABLED );
        else
            clr_object_flag( DiskSpaceOverview.DISABLED );
    }

    
    protected boolean check_changed()
    {        
        if (model.is_new(row))
            return true;

        String path = object.getPath();
        if (path != null && TXT_PATH.getText().compareTo(path ) != 0)
            return true;

        String cap_txt = object.getMaxCapacity();
        if (cap_txt != null && TXT_PATH.getText().compareTo(path ) != 0)
            return true;



        if (BT_DISABLED.isSelected() != object_is_disabled())
            return true;

        DiskSpaceOverview.DiskSpaceTypeEntry dsty = (DiskSpaceOverview.DiskSpaceTypeEntry)CB_STATUS.getSelectedItem();
        String status = object.getStatus();
        if (dsty.type.compareTo(status) != 0)
            return true;
        
        return false;
    }
                        
    protected boolean is_plausible()
    {
        if (TXT_PATH.getText().length() == 0 || TXT_PATH.getText().length() > 255)
        {
            UserMain.errm_ok(UserMain.getString("Der_Pfad_ist_nicht_okay"));
            return false;
        }
        if (CB_STATUS.getSelectedItem() == null)
        {
            UserMain.errm_ok(UserMain.getString("Der_DiskSpace_Status_ist_nicht_okay"));
            return false;
        }
                
        return true;
    }


    protected void set_object_props()
    {
        String path = TXT_PATH.getText();
        boolean de = BT_DISABLED.isSelected();
        DiskSpaceOverview.DiskSpaceTypeEntry dsty = (DiskSpaceOverview.DiskSpaceTypeEntry)CB_STATUS.getSelectedItem();

        object.setPath(path);
        object.setStatus(dsty.type);
        set_object_disabled( de );
    }

    
        
    @Override
    protected boolean is_new()
    {
        return model.is_new(row);
    }
   

    @Override
    public JButton get_default_button()
    {
        return BT_OK;
    }
    
}
