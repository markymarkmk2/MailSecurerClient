/*
 * LogPanel.java
 *
 * Created on 27. Mai 2008, 15:56
 */

package dimm.home;

import dimm.home.Rendering.GlossButton;
import dimm.home.Rendering.GlossDialogPanel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.util.StringTokenizer;
import javax.swing.Timer;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.SpinnerNumberModel;


/**
 
 @author  Administrator
 */
public class LogPanel extends GlossDialogPanel   implements ActionListener
{
    Timer timer;
    String last_line;
    int sq = 0;
    
    UserMain main;
    int last_len;
    
    /** Creates new form StationIDPanel */
    public LogPanel(UserMain _main)
    {
        main = _main;
        initComponents();
        
        SP_LINES.setModel( new SpinnerNumberModel(100, 0, 10000, 100)  );
        
        CB_LOG.removeAllItems();
        CB_LOG.addItem( UserMain.getString("Info") );
        CB_LOG.addItem( UserMain.getString("Warnungen") );
        CB_LOG.addItem( UserMain.getString("Fehler") );
        CB_LOG.addItem( UserMain.getString("Debug") );
        CB_LOG.addItem( UserMain.getString("System") );
        
        reread_log();        
                
        timer = new Timer( 3000, this );
        timer.start();
        
        
    }
    
    void reread_log()
    {
        int lines = ((Integer)SP_LINES.getValue()).intValue();
        
        String txt = reread_log(lines);
        if (txt == null)
            return;
        
        StringBuffer sb = new StringBuffer();
        StringTokenizer sto = new StringTokenizer( txt, "\n\r");
        
        while (sto.hasMoreTokens())
        {
            String str  = sto.nextToken() + "\n";
            //System.out.println( "Line: " + str );
            sb.insert(0, str );            
            if (!sto.hasMoreTokens())
                last_line = new String(str);
        }
        //System.out.println( "Len: " + sb.length() );
        
        TXT_LOG.setText( sb.toString());
        TXT_LOG.setCaretPosition(0);
    }
    
    String reread_log(int lines)
    {
        int idx = CB_LOG.getSelectedIndex();
        String log = "info.log";
        if (idx == 1)
            log = "warn.log";
        if (idx == 2)
            log = "error.log";
        if (idx == 3)
            log = "debug.log";
        if (idx == 4)
            log = "messages";
                    
        String cmd = "READLOG LOG:" + log + " LINES:" + Integer.toString(lines/* + sq++*/);
        
/*        main.get_comm().send_fast_retry_cmd( cmd );
        
        return main.get_comm().get_answer();        */
        return "";
    }
        
    @Override
    public void actionPerformed(ActionEvent actionEvent)
    {
        timer.stop();
             
            
        String act_last_line = "";
        
        String txt = reread_log(5);
        
        StringTokenizer sto = new StringTokenizer( txt, "\n\r");
        
        while (sto.hasMoreTokens())
        {
            String str = sto.nextToken() + "\n";
            if (!sto.hasMoreTokens())
                act_last_line = new String(str);
            
        }
        
        int act_len = ((Integer)SP_LINES.getValue()).intValue();
        if (act_last_line.compareTo( last_line ) != 0 ||
                last_len != act_len )
        {
            reread_log();
            last_len = act_len;
        }
        
        timer.start();
    }
    
    
    
    /** This method is called from within the constructor to
     initialize the form.
     WARNING: Do NOT modify this code. The content of this method is
     always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        CB_LOG = new javax.swing.JComboBox();
        SP_LINES = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        TXT_LOG = new javax.swing.JTextArea();
        BT_GETLOG = new GlossButton();
        BT_OK = new GlossButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText(UserMain.Txt("Logdatei")); // NOI18N

        CB_LOG.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Eintrag 1", "Eintrag 2", "Eintrag 3", "Eintrag 4" }));
        CB_LOG.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CB_LOGActionPerformed(evt);
            }
        });

        TXT_LOG.setBackground(new java.awt.Color(51, 51, 51));
        TXT_LOG.setColumns(20);
        TXT_LOG.setEditable(false);
        TXT_LOG.setFont(new java.awt.Font("Monospaced", 0, 12));
        TXT_LOG.setForeground(new java.awt.Color(201, 201, 201));
        TXT_LOG.setRows(5);
        TXT_LOG.setBorder(null);
        jScrollPane1.setViewportView(TXT_LOG);

        BT_GETLOG.setText(UserMain.Txt("Log_Download")); // NOI18N
        BT_GETLOG.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BT_GETLOGActionPerformed(evt);
            }
        });

        BT_OK.setText(UserMain.Txt("CLOSE_DIALOG")); // NOI18N
        BT_OK.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BT_OKActionPerformed(evt);
            }
        });

        jLabel2.setText(UserMain.Txt("Zeilen")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(CB_LOG, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SP_LINES, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BT_GETLOG, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                        .addComponent(BT_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(SP_LINES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CB_LOG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BT_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BT_GETLOG, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CB_LOGActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CB_LOGActionPerformed
    {//GEN-HEADEREND:event_CB_LOGActionPerformed
        
        reread_log();
    }//GEN-LAST:event_CB_LOGActionPerformed

    private void BT_GETLOGActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_GETLOGActionPerformed
    {//GEN-HEADEREND:event_BT_GETLOGActionPerformed
        
        JFileChooser jf = new JFileChooser();
        jf.setDialogType(JFileChooser.SAVE_DIALOG);
        jf.setSelectedFile( new File("log.tgz") );
        jf.showSaveDialog( this );
        
        File f = jf.getSelectedFile();
        if (f == null)
            return;
        
        String cmd;
        if (UserMain.errm_ok_cancel(UserMain.getString("Wollen_Sie_die_Log-Dateien_anschliessend_von_der_Box_entfernen?")))
            cmd = "GETLOG DEL:1";
        else
            cmd = "GETLOG DEL:0";
        
        try
        {
            FileOutputStream fos = new FileOutputStream( f );
            
            //main.get_comm().send_cmd( cmd, fos  );
            
            fos.close();
        }
        catch (Exception exc )
        {
            UserMain.errm_ok(UserMain.getString("Daten_konnten_nicht_geholt_werden:_") + exc.getMessage() );
        }
    }//GEN-LAST:event_BT_GETLOGActionPerformed

    private void BT_OKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_OKActionPerformed
    {//GEN-HEADEREND:event_BT_OKActionPerformed
        
        this.setVisible( false );
        timer.stop();
        
    }//GEN-LAST:event_BT_OKActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_GETLOG;
    private javax.swing.JButton BT_OK;
    private javax.swing.JComboBox CB_LOG;
    private javax.swing.JSpinner SP_LINES;
    private javax.swing.JTextArea TXT_LOG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public JButton get_default_button()
    {
        return BT_OK;
    }
    
}
