/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditTextList.java
 *
 * Created on 19.01.2010, 11:23:15
 */
package dimm.home.Rendering;

import dimm.home.UserMain;
import home.shared.Utilities.Validator;
import javax.swing.JButton;

/**
 *
 * @author mw
 */
public class EditTextList extends GlossDialogPanel
{

    String delim;
    String val;
    private boolean okay;
    boolean email;

    public void setEmail( boolean email )
    {
        this.email = email;
    }


    /** Creates new form EditTextList */
    public EditTextList( String val, String delim )
    {
        initComponents();
        this.val = val;
        this.delim = delim;

        to_txta();
    }

    public EditTextList( String val )
    {
        this(val, ",");
    }
    public String get_text()
    {
        return from_txta();
    }
    boolean check()
    {
        if (email)
        {
            String [] list = from_txta().split(delim);
            for (int i = 0; i < list.length; i++)
            {
                String string = list[i];
                if (!Validator.is_valid_email(string))
                    return false;
            }
        }
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TXTA_TEXT = new javax.swing.JTextArea();
        BT_OK = new GlossButton();
        BT_ABORT = new GlossButton();

        TXTA_TEXT.setColumns(20);
        TXTA_TEXT.setRows(5);
        jScrollPane1.setViewportView(TXTA_TEXT);

        BT_OK.setText(UserMain.getString("OK")); // NOI18N
        BT_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_OKActionPerformed(evt);
            }
        });

        BT_ABORT.setText(UserMain.getString("Abort")); // NOI18N
        BT_ABORT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_ABORTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BT_ABORT)
                        .addGap(18, 18, 18)
                        .addComponent(BT_OK)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {BT_ABORT, BT_OK});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BT_OK)
                    .addComponent(BT_ABORT))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BT_OKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_OKActionPerformed
    {//GEN-HEADEREND:event_BT_OKActionPerformed
        // TODO add your handling code here:
        if (!check())
        {
            UserMain.errm_ok(my_dlg, UserMain.Txt("Please_check_your_input"));
            return;
        }
        setOkay(true);
        my_dlg.setVisible(false);

    }//GEN-LAST:event_BT_OKActionPerformed

    private void BT_ABORTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_ABORTActionPerformed
    {//GEN-HEADEREND:event_BT_ABORTActionPerformed
        // TODO add your handling code here:
        setOkay(false);
        my_dlg.setVisible(false);

    }//GEN-LAST:event_BT_ABORTActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_ABORT;
    private javax.swing.JButton BT_OK;
    private javax.swing.JTextArea TXTA_TEXT;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void to_txta()
    {
        if (val == null || val.length() == 0)
        {
            TXTA_TEXT.setText("");
        }
        else
        {
            String[] arr = val.split(delim);
            StringBuffer sb = new StringBuffer();

            for (int i = 0; i < arr.length; i++)
            {
                if (i > 0)
                {
                    sb.append("\n");
                }

                sb.append(arr[i].trim());
            }
            TXTA_TEXT.setText(sb.toString());
        }
    }

    private String from_txta()
    {
        String txta = TXTA_TEXT.getText();

        if (txta == null || txta.length() == 0)
        {
            return "";
        }

        String[] arr = txta.split("\n");
        StringBuffer sb = new StringBuffer();

        for (int i = 0; i < arr.length; i++)
        {
            if (i > 0 && i < arr.length)
            {
                sb.append(delim);
            }

            sb.append(arr[i].trim());
        }
        return sb.toString();

    }

    /**
     * @return the okay
     */
    public boolean isOkay()
    {
        return okay;
    }

    /**
     * @param okay the okay to set
     */
    public void setOkay( boolean okay )
    {
        this.okay = okay;
    }

    @Override
    public JButton get_default_button()
    {
        return BT_OK;
    }
}
