/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TBirdOptsPanel.java
 *
 * Created on 21.10.2010, 17:47:10
 */

package dimm.home.Panels.MailImport;

import dimm.home.UserMain;
import java.io.File;
import java.io.IOException;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;

/**
 *
 * @author mw
 */
public class ComboProfileOptsPanel extends javax.swing.JPanel
{
    PanelImportMailbox panel;

    /** Creates new form TBirdOptsPanel */
    public ComboProfileOptsPanel(PanelImportMailbox _panel)
    {
        panel = _panel;
        initComponents();

    }

    public void set_info_text( String t )
    {
        LB_INFO.setText(t);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LB_INFO = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CB_PROFILE = new javax.swing.JComboBox();
        LB_PATH = new javax.swing.JLabel();
        TXT_PATH = new javax.swing.JTextField();
        BT_SET_PATH = new javax.swing.JButton();

        LB_INFO.setText(UserMain.getString("Please_select_the_Thunderbird-Profile_folder")); // NOI18N

        jLabel2.setText(UserMain.getString("Profile")); // NOI18N

        CB_PROFILE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CB_PROFILE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_PROFILEActionPerformed(evt);
            }
        });

        LB_PATH.setText(UserMain.getString("Folder")); // NOI18N

        BT_SET_PATH.setText("...");
        BT_SET_PATH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_SET_PATHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LB_INFO)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LB_PATH)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CB_PROFILE, 0, 346, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TXT_PATH, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BT_SET_PATH)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LB_INFO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CB_PROFILE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_PATH)
                    .addComponent(TXT_PATH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BT_SET_PATH))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CB_PROFILEActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CB_PROFILEActionPerformed
    {//GEN-HEADEREND:event_CB_PROFILEActionPerformed
        // TODO add your handling code here:
        if (CB_PROFILE.getSelectedItem() != null)
        {
            NamePathEntry nbpe = (NamePathEntry) CB_PROFILE.getSelectedItem();
            if (nbpe.path == null)
            {
                TXT_PATH.setEditable(true);
                BT_SET_PATH.setEnabled(true);
            }
            else
            {
                TXT_PATH.setEditable(false);
                BT_SET_PATH.setEnabled(false);
            }
        }
        build_tree_callback();

    }//GEN-LAST:event_CB_PROFILEActionPerformed

    boolean is_manual_path()
    {
        return TXT_PATH.isEditable();
    }

    static File last_dir;

    private void BT_SET_PATHActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_SET_PATHActionPerformed
    {//GEN-HEADEREND:event_BT_SET_PATHActionPerformed
        // TODO add your handling code here:
        open_mail_path_select();
}//GEN-LAST:event_BT_SET_PATHActionPerformed

    private void open_mail_path_select()
    {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setCurrentDirectory(last_dir);
        if (JFileChooser.APPROVE_OPTION==chooser.showDialog(panel.getDlg(), "Select"))
          {
               File dir = chooser.getSelectedFile();
               last_dir = dir;
               TXT_PATH.setText(dir.getAbsolutePath());

          }

        try
        {
            selected_path = TXT_PATH.getText();
            panel.manager.handle_build_tree( panel.get_tree());
        }
        catch (IOException iOException)
        {
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_SET_PATH;
    private javax.swing.JComboBox CB_PROFILE;
    private javax.swing.JLabel LB_INFO;
    private javax.swing.JLabel LB_PATH;
    private javax.swing.JTextField TXT_PATH;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    JComboBox get_combo()
    {
        return CB_PROFILE;
    }
        boolean is_in_fill_cb;

        String selected_path = null;
        NamePathEntry selected_npe = null;

    String getPath()
    {
        return selected_path;
    }

    NamePathEntry getNpe()
    {
        return selected_npe;
    }


    void build_tree_callback()
    {
        if (is_in_fill_cb)
            return;

        if (panel.manager == null)
            return;

        is_in_fill_cb = true;

        selected_npe = null;
        selected_path = null;

        if (CB_PROFILE.getSelectedItem() != null)
        {
            selected_npe = (NamePathEntry) CB_PROFILE.getSelectedItem();
        }
        if (selected_npe == null)
        {
            selected_path = TXT_PATH.getText();
        }

        if (selected_npe == null && (selected_path == null || selected_path.length() == 0))
        {
            panel.set_enable_next(false);
            is_in_fill_cb = false;
            return;
        }


        try
        {
            panel.manager.handle_build_tree(panel.get_tree());
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
            UserMain.errm_ok(panel.getDlg(), UserMain.Txt("Cannot_build_mail_tree") + ": " + ex.getMessage());
            panel.set_enable_next(false);
            return;
        }
        panel.set_enable_next(true);

        //CB_PROFILE.setSelectedIndex(0);

        is_in_fill_cb = false;

    }
}
