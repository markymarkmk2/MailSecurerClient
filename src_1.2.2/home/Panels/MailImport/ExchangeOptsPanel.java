/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TBirdOptsPanel.java
 *
 * Created on 21.10.2010, 17:47:10
 */

package dimm.home.Panels.MailImport;

import dimm.home.Models.AccountConnectorComboModel;
import dimm.home.UserMain;
import home.shared.Utilities.ParseToken;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

/*
            TODO: All users -> INBOX and OutBox of Userlist
                    -> ListUsers via AD ->
                  One-User -> Show all MailBoxes from a single user*/

/**
 *
 * @author mw
 */
public class ExchangeOptsPanel extends javax.swing.JPanel
{
    PanelImportMailbox panel;

    AccountConnectorComboModel accm;

    /** Creates new form TBirdOptsPanel */
    public ExchangeOptsPanel(PanelImportMailbox _panel)
    {
        panel = _panel;
        initComponents();

        File f = new File("excdfltscan.txt");
        System.out.println(f.getAbsolutePath());
        if (f.exists())
        {
            try
            {
                FileReader fr = new FileReader(f);
                char[] buff = new char[8192];
                int len = fr.read(buff);
                fr.close();
                String str = new String(buff, 0, len);
                ParseToken pt = new ParseToken(str);
                TXT_DOMAIN.setText(pt.GetString("DO:"));
                TXT_SERVER.setText(pt.GetString("SV:"));
                TXT_USER.setText(pt.GetString("US:"));
                TXTP_PWD.setText(pt.GetString("PW:"));
            }
            catch (IOException iOException)
            {
            }
        }       
      
    }

    int get_account_id()
    {
        return accm.get_act_id();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        LB_PATH = new javax.swing.JLabel();
        TXT_SERVER = new javax.swing.JTextField();
        TXT_DOMAIN = new javax.swing.JTextField();
        LB_PATH1 = new javax.swing.JLabel();
        TXT_USER = new javax.swing.JTextField();
        TXTP_PWD = new javax.swing.JPasswordField();
        LB_PATH2 = new javax.swing.JLabel();
        LB_PATH3 = new javax.swing.JLabel();
        CB_VERSION = new javax.swing.JComboBox();
        BT_CONNECT = new javax.swing.JButton();

        jLabel2.setText(UserMain.getString("Exchange-Server")); // NOI18N

        LB_PATH.setText(UserMain.getString("Username_wo_domain")); // NOI18N

        LB_PATH1.setText(UserMain.getString("Domain")); // NOI18N

        LB_PATH2.setText(UserMain.getString("Password")); // NOI18N

        LB_PATH3.setText(UserMain.getString("Exchangeversion")); // NOI18N

        CB_VERSION.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        BT_CONNECT.setText(UserMain.Txt("Connect")); // NOI18N
        BT_CONNECT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_CONNECTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(LB_PATH2)
                    .addComponent(LB_PATH1)
                    .addComponent(LB_PATH)
                    .addComponent(LB_PATH3))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CB_VERSION, 0, 157, Short.MAX_VALUE)
                    .addComponent(TXTP_PWD, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .addComponent(TXT_USER, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .addComponent(TXT_DOMAIN, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .addComponent(TXT_SERVER, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(BT_CONNECT)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TXT_SERVER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BT_CONNECT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_DOMAIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LB_PATH1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_USER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LB_PATH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXTP_PWD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LB_PATH2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CB_VERSION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LB_PATH3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BT_CONNECTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_CONNECTActionPerformed
    {//GEN-HEADEREND:event_BT_CONNECTActionPerformed
        // TODO add your handling code here:
         build_tree_callback();
    }//GEN-LAST:event_BT_CONNECTActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton BT_CONNECT;
    javax.swing.JComboBox CB_VERSION;
    javax.swing.JLabel LB_PATH;
    javax.swing.JLabel LB_PATH1;
    javax.swing.JLabel LB_PATH2;
    javax.swing.JLabel LB_PATH3;
    javax.swing.JPasswordField TXTP_PWD;
    javax.swing.JTextField TXT_DOMAIN;
    javax.swing.JTextField TXT_SERVER;
    javax.swing.JTextField TXT_USER;
    javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

   
    boolean is_in_fill_cb;


    void build_tree_callback()
    {
        try
        {
            if (is_in_fill_cb)
            {
                return;
            }
            if (panel.manager == null)
            {
                return;
            }
            panel.manager.handle_build_tree(panel.get_tree());
            
            panel.set_enable_next(true);
            is_in_fill_cb = false;
        }
        catch (Exception ex)
        {
            UserMain.errm_ok(panel.getDlg(), UserMain.Txt("Cannot_build_exchange_tree") + ": " + ex.getMessage());
        }

    }
}
