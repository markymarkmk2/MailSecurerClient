/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BackupStatus.java
 *
 * Created on 01.03.2010, 15:10:22
 */
package dimm.home.Panels;

import dimm.home.Main;
import dimm.home.Rendering.GlossButton;
import dimm.home.Rendering.GlossDialogPanel;
import dimm.home.UserMain;
import home.shared.Utilities.ParseToken;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 *
 * @author mw
 */
public class UpdatePanel extends GlossDialogPanel
{
    
    ImageIcon ok_icon;
    ImageIcon nok_icon;
    ImageIcon offline_icon;

    long lnv = -1;
    long rnv = -1;

    /** Creates new form BackupStatus */
    public UpdatePanel()
    {

        // "ID:%ld TB:%.0lf CB:%.0lf TF:%ld TD:%ld CF:%ld CD:%ld SP:%.0lf STF:%.0lf SCF:%.0lf LT:%.0lf PC:%d",
        initComponents();

        ok_icon = new javax.swing.ImageIcon(getClass().getResource("/dimm/home/images/web_check.png"));
        nok_icon = new javax.swing.ImageIcon(getClass().getResource("/dimm/home/images/web_delete.png"));
        offline_icon = new javax.swing.ImageIcon(getClass().getResource("/dimm/home/images/web_not_selected.png"));

       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BT_CLOSE = new GlossButton();
        BT_UPDATE = new GlossButton();
        BT_CHECK = new GlossButton();
        jLabel1 = new javax.swing.JLabel();
        TXT_LOCAL_VER = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TXT_REMOTE_VER = new javax.swing.JTextField();

        BT_CLOSE.setText(UserMain.Txt("Close")); // NOI18N
        BT_CLOSE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_CLOSEActionPerformed(evt);
            }
        });

        BT_UPDATE.setText(UserMain.Txt("Update")); // NOI18N
        BT_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_UPDATEActionPerformed(evt);
            }
        });

        BT_CHECK.setText(UserMain.Txt("Check_Updates")); // NOI18N
        BT_CHECK.setActionCommand(UserMain.Txt("Check_Updates")); // NOI18N
        BT_CHECK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_CHECKActionPerformed(evt);
            }
        });

        jLabel1.setText(UserMain.Txt("Server_version")); // NOI18N

        jLabel2.setText(UserMain.Txt("Remote_version")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BT_CHECK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BT_UPDATE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(BT_CLOSE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_LOCAL_VER, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXT_REMOTE_VER, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_LOCAL_VER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TXT_REMOTE_VER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BT_UPDATE)
                    .addComponent(BT_CLOSE)
                    .addComponent(BT_CHECK))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    void read_versions( String ret )
    {
            ParseToken pt = new ParseToken(ret.substring(3));
            TXT_LOCAL_VER.setText( pt.GetString("LV:"));
            TXT_REMOTE_VER.setText( pt.GetString("RV:"));
            lnv = pt.GetLongValue("LNV:");
            rnv = pt.GetLongValue("RNV:");

            if (rnv == lnv)
            {
                 UserMain.info_ok(my_dlg, UserMain.Txt("The_server_release_is_up_to_date") );
            }
            else if (rnv >= lnv)
            {
                 UserMain.info_ok(my_dlg, UserMain.Txt("A_new_server_release_is_available!") );
            }

    }

    private void BT_CHECKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_CHECKActionPerformed
    {//GEN-HEADEREND:event_BT_CHECKActionPerformed
        // TODO add your handling code here:

        lnv = -1;
        rnv = -1;

        String ret = UserMain.fcc().call_abstract_function("Update CMD:check_ver");
        if (ret == null)
        {
            UserMain.errm_ok(UserMain.Txt("Cannot_check_versions"));
            return;
        }
        if (ret.charAt(0) == '0')
        {
            read_versions(ret.substring(3));
        }
        else
        {
            UserMain.errm_ok(UserMain.Txt("Error_while_reading_version_info") + ": " + ret);
        }
    }//GEN-LAST:event_BT_CHECKActionPerformed

    private void BT_UPDATEActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_UPDATEActionPerformed
    {//GEN-HEADEREND:event_BT_UPDATEActionPerformed
        // TODO add your handling code here:
        if (lnv == 0)
        {
            BT_CHECKActionPerformed(null);
        }
        if (lnv <= 0 || rnv <= 0)
        {
            UserMain.errm_ok(UserMain.Txt("I_cannot_update_the_server_reelase"));
            return;
        }
        if (rnv == lnv)
        {
             UserMain.info_ok(my_dlg, UserMain.Txt("The_server_release_is_up_to_date") );
             return;
        }

        String ret = UserMain.fcc().call_abstract_function("Update CMD:update");
        if (ret == null)
        {
            UserMain.errm_ok(UserMain.Txt("Cannot_check_versions"));
            return;
        }
        if (ret.charAt(0) == '0')
        {
            UserMain.info_ok(my_dlg, UserMain.Txt("The_update_process_will_begin_soon"));

            int i = 60;
            UserMain.self.show_busy(my_dlg, UserMain.Txt("Waiting_for_update") + "...");
            while (i-- > 0)
            {
                Main.sleep(1000);

                ret = UserMain.fcc().call_abstract_function("Update CMD:check_ver", 2);

                if (ret == null)
                {
                    UserMain.self.show_busy( my_dlg, UserMain.Txt("Shutting_down") + "...");
                    break;
                }
            }
            if (i <= 0)
            {
                UserMain.self.hide_busy();
                UserMain.errm_ok(UserMain.Txt("The update_process_did_not_start"));
                return;
            }

            i = 60;

            while (i-- > 0)
            {
                Main.sleep(1000);

                ret = UserMain.fcc().call_abstract_function("Update CMD:check_ver", 2);

                if (ret != null)
                {
                     UserMain.self.hide_busy();
                     read_versions(ret.substring(3));
                     if (lnv == rnv)
                     {
                         UserMain.info_ok(my_dlg, UserMain.Txt("The_update_process_was_successfull"));
                     }
                     break;
                }
            }
            UserMain.self.hide_busy();
        }
    }//GEN-LAST:event_BT_UPDATEActionPerformed

    private void BT_CLOSEActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BT_CLOSEActionPerformed
    {//GEN-HEADEREND:event_BT_CLOSEActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);
        
    }//GEN-LAST:event_BT_CLOSEActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_CHECK;
    private javax.swing.JButton BT_CLOSE;
    private javax.swing.JButton BT_UPDATE;
    private javax.swing.JTextField TXT_LOCAL_VER;
    private javax.swing.JTextField TXT_REMOTE_VER;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void deactivate()
    {
    }

 
   

    @Override
    public JButton get_default_button()
    {
        return BT_CLOSE;
    }
}
